// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// Score
Rcpp::List Score(int n, int method, NumericVector time, IntegerVector status, IntegerVector strata, NumericVector score, NumericVector wt);
RcppExport SEXP _fcoxph_Score(SEXP nSEXP, SEXP methodSEXP, SEXP timeSEXP, SEXP statusSEXP, SEXP strataSEXP, SEXP scoreSEXP, SEXP wtSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type method(methodSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type time(timeSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type status(statusSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type strata(strataSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type score(scoreSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type wt(wtSEXP);
    rcpp_result_gen = Rcpp::wrap(Score(n, method, time, status, strata, score, wt));
    return rcpp_result_gen;
END_RCPP
}

RcppExport SEXP Ccoxcount1(SEXP, SEXP);
RcppExport SEXP Ccoxcount2(SEXP, SEXP, SEXP, SEXP);

static const R_CallMethodDef CallEntries[] = {
    {"_fcoxph_Score", (DL_FUNC) &_fcoxph_Score, 7},
    {"Ccoxcount1", (DL_FUNC) &Ccoxcount1, 2},
    {"Ccoxcount2", (DL_FUNC) &Ccoxcount2, 4},
    {NULL, NULL, 0}
};

RcppExport void R_init_fcoxph(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
